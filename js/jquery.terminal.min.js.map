{"version":3,"sources":["js/jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","debounce","FUNC_ERROR_TEXT","isObject","value","type","now","func","wait","options","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","trigger","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","jquery_resolve","defer","Deferred","promise","is_fully_in_viewport","is_visible","node","container","box","getBoundingClientRect","viewport","top","bottom","height","IntersectionObserver","item_observer","entries","isIntersecting","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","message","exception_message","scrollbar_event","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","init","defined","filter","append","front","restart","Boolean","forEach","Stack","size","pop","concat","History","name","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","clear","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","noop","onCommandChange","inputStyle","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","repeatTimeoutKeys","tabindex","tabs","settings","maybe_data","id","clip","autocapitalize","spellcheck","is_mobile","val","width","num_chars","char_width","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","animation","restart_animation","paste_count","line_marker","line_marker_re","get_char_pos","closest","parent","prevAll","prevUntil","nextUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","keys","which","keymap","default_keymap","ALT+D","delete_word","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","isResolved","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","ARROWUP","prev_history","CTRL+P","ARROWDOWN","next_history","CTRL+N","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+END","CTRL+E","HOME","home","CTRL+HOME","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_word_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","clipboard","substring","m","isenabled","paste","fix_textarea","then","first_up_history","line","string","lastIndexOf","lines","sum","mobile_focus","fix_cursor","animation_supported","style","getComputedStyle","animationName","getPropertyValue","_class","className","position_only","is_android","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","terminal","escape_regex","get_char_width","$prompt","html","get_num_chars","floor","get_splitted_command_line","split_equal","skip_empty","strip","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","unixFormattingEscapeBrackets","formatted","apply_formatters","normalize","stack","before","encoded","encode","wrap","is_formatting","start","prev","after","cursor_line","draw_cursor_line","end_line","cursor_end_line","ch_unit_bug","before_str","c_before","cursor_len","setProperty","div","lines_after","last_ins","insertAfter","lines_before","css","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","is_css_variables_supported","find_position","cmp","search_pos","opts","guess","codepoint_len","binary_search","chars","split_characters","crlf","encoded_last_line","last_line","fire_change_command","clean","option","delete","stay","removed","silent","new_keymap","original","bare_command","destroy","doc","keypress_event","keydown_event","input_event","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","new_num_chars","invoke_key","shortcut","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","prevent_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold","hold_pause","skip_insert","is_backspace","is_single","clear_reverse_search_key","fake","exception","keydown","clear_hold","keypress","is_key_native","normalized","inArray","event","chr","keycode","charCodeAt","abs","was_down","count","$target","down","button","originalEvent","get_selected_html","KeyboardEvent","combine_chr_re","astral_symbols_re","emoji_re","entity_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","color_hex_re","url_re","url_nf_re","email_re","url_full_re","email_full_re","command_re","extended_command_re","format_begin_re","format_start_re","format_end_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","domPrefixes","elm","createElement","is_ch_unit_supported","agent","CSS","supports","proto","getOwnPropertyDescriptor","check","substr","vendor","opera","base","ch","space","bare_text","safe","char_len","get_next_character","match_entity","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","compare_fn","mid","sel","rangeCount","appendChild","cloneContents","innerHTML","with_selection","ranges","removeAllRanges","addRange","process_selected_line","$self","hasClass","process_selected_html","stdout","$html","$cmd_lines","queryCommandSupported","$textarea","had_focus","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","term","onTerminalChange","setBaseAndExtent","setStart","childNodes","process_command","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","have_formatting","format_split","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","iterate_formatting","is_space","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","in_text","space_count","prev_space","braket","char","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","amp","keep_words","prev_format","first_index","line_length","last_char","last_bracket","last_iteraction","can_break","stripped","text_len","new_index","closed_formatting","matched","sp","nested_formatting","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","Exception","linksNoReferrer","linksNoFollow","allowedAttributes","anyLinks","background","data_text","attrs","style_str","text_decoration","extra","rel","unshift","allowed","filters","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","done","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","url","method","params","success","deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","terminal_ready","get_char_size","rect","visiblity","temp","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","raw","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","onAfterRedraw","onEchoCommand","onFlush","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","display_object","echo","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","names","found","make_interpreter","user_intrp","finalize","rpc_count","fn_interpreter","recur","interpreters","new_obj","make_json_rpc_login","user","passwd","push_line","output_buffer","NEW_LINE","buffer_line","format_options","words","keepWords","newline","links","escaped","process_line","line_settings","is_fn","parseObject","parts","prev_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","fire_event","limit_lines","$lines","for_remove","parents","show_greetings","greetings","signature","echo_command","get_command","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","invoke","force_awake","when","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","onBeforeLogout","clear_loging_storage","onAfterLogout","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","context_callback_proxy","fun","init_queue","onStart","scroll_to_view","term_offset","scrollTop","it","move_cursor_visible","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","complete","word","escape","before_cursor","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","terminal_id","user_export","get_prompt","view","when_ready","set_prompt","ignore_hash","state","d","cmd_ready","delayed_commands","autologin","infinite","logins","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","num_rows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","frozen","lenghts","is_bottom","get_output","new_num_rows","wrapper","replaceWith","e1","e2","remove_line","arg_defined","locals","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","infiniteLogin","push_settings","object_or_name","prefix","font_resizer","blur_terminal","focus_terminal","visibility_observer","mutation_observer","disconnect","defunct","scrollHeight","scroll_height","scroll_top","outerHeight","command_queue","old_width","old_height","old_enabled","ignoreSystemDescribe","base_interpreter","proxy","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","itrp","onResize","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","ignore_elements","mousedown","mouseup","timeout","dblclick","pageX","pageY","props","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","visibility_checker","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version DEV\n *\n * This file is part of jQuery Terminal. https://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2019 Jakub T. Jankiewicz <https://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * debounce function from Lodash\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * The MIT License\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * Date: Sun, 07 Apr 2019 16:34:11 +0000\n */\n/* global location, setTimeout, window, global, sprintf, setImmediate,\n          IntersectionObserver,  ResizeObserver, module, require, define,\n          setInterval, clearInterval, clearTimeout, Blob */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n// -----------------------------------------------------------------------\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    /* istanbul ignore next */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: Debounce from Lodash\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    var debounce = (function() {\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        function isObject(value) {\n            var type = typeof value;\n            return value != null && (type == 'object' || type == 'function');\n        }\n        function now() {\n            return Date.now();\n        }\n        return function debounce(func, wait, options) {\n            var nativeMax = Math.max,\n                nativeMin = Math.min;\n\n            var lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime,\n                lastInvokeTime = 0,\n                leading = false,\n                maxing = false,\n                trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            wait = wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? nativeMax(options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs,\n                    thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime,\n                    timeWaiting = wait - timeSinceLastCall;\n\n                return maxing\n                    ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n                    : timeWaiting;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n                        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n            }\n\n            function timerExpired() {\n                var time = now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(now());\n            }\n\n            function debounced() {\n                var time = now(),\n                    isInvoking = shouldInvoke(time);\n\n                lastArgs = arguments;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        };\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback) {\n        var trigger = arguments.length === 0;\n        var unbind = arguments[0] === \"unbind\";\n        if (!trigger && !unbind && !is_function(callback)) {\n            throw new Error('Invalid argument, it need to a function or string ' +\n                            '\"unbind\" or no arguments.');\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (trigger || unbind) {\n                callbacks = $this.data('callbacks');\n                if (trigger) {\n                    callbacks && callbacks.fire();\n                } else {\n                    if (callback && callbacks) {\n                        callbacks.remove(callback);\n                        if (!callbacks.has()) {\n                            callbacks = null;\n                        }\n                    } else {\n                        callbacks = null;\n                    }\n                    if (!callbacks) {\n                        $this.removeData('callbacks');\n                        if (window.ResizeObserver) {\n                            var observer = $this.data('observer');\n                            if (observer) {\n                                observer.unobserve(this);\n                                $this.removeData('observer');\n                            }\n                        } else {\n                            iframe = $this.find('> iframe');\n                            if (iframe.length) {\n                                // just in case of memory leaks in IE\n                                $(iframe[0].contentWindow).off('resize').remove();\n                                iframe.remove();\n                            } else if ($this.is('body')) {\n                                $(window).off('resize.resizer');\n                            }\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass('resizer').appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    // -----------------------------------------------------------------------\n    function jquery_resolve(value) {\n        var defer = jQuery.Deferred();\n        defer.resolve(value);\n        return defer.promise();\n    }\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.is_fully_in_viewport = (function() {\n        function is_visible(node, container) {\n            var box = node.getBoundingClientRect();\n            var viewport = container[0].getBoundingClientRect();\n            var top = box.top - viewport.top;\n            var bottom = box.bottom - viewport.top;\n            var height = container.height();\n            return bottom > 0 && top <= height;\n        }\n        if (window.IntersectionObserver) {\n            return function(container) {\n                var node = this[0];\n                var defer = jQuery.Deferred();\n                var item_observer = new window.IntersectionObserver(function(entries) {\n                    defer.resolve(entries[0].isIntersecting);\n                    item_observer.unobserve(node);\n                }, {\n                    root: container[0]\n                });\n                item_observer.observe(node);\n                return defer.promise();\n            };\n        } else {\n            return function(container) {\n                return jquery_resolve(is_visible(this[0], container));\n            };\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = init instanceof Array ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (new_data instanceof Array) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        self.append('<span class=\"prompt\"></span>');\n        self.append('<div class=\"cursor-line\">' +\n                    '<span></span>' +\n                    '<span class=\"cursor\"><span><span>&nbsp;</span></span></span>' +\n                    '<span></span>' +\n                    '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(self.find('.cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: settings.tabindex\n        }).addClass('clipboard').appendTo(self);\n        if (!is_mobile) {\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        // use \\uFFFF to mark newline extra character\n        // so we can hide it by css when using text selection\n        var line_marker = '\\uFFFF';\n        var line_marker_re = /\\uFFFF$/;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.nextUntil('textarea').length;\n                return node.find('span[data-text]').length +\n                    node.prevUntil('.prompt').find('span[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ARROWUP',\n            'DOWN': 'ARROWDOWN',\n            'LEFT': 'ARROWLEFT',\n            'RIGHT': 'ARROWRIGHT',\n            'DEL': 'DELETE',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function get_key(e) {\n            if (e.key) {\n                var key = e.key.toUpperCase();\n                if (key_mapping[key]) {\n                    key = key_mapping[key];\n                }\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (keycodes[which] instanceof Array) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_word(true),\n            'HOLD+DELETE': delete_word(false),\n            'HOLD+SHIFT+DELETE': delete_word(false),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                var promise;\n                if (settings.commands) {\n                    promise = settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt) &&\n                    (promise && promise.isResolved() || !promise)) {\n                    draw_prompt();\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': next_history,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': debounce(left, 10),\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': debounce(right, 10),\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end(true),\n            'CTRL+END': end(),\n            'CTRL+E': end(),\n            'HOME': home(true),\n            'CTRL+HOME': home(),\n            'CTRL+A': home(),\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_word_backward(true),\n            'HOLD+BACKSPACE': delete_word_backward(false),\n            'HOLD+SHIFT+BACKSPACE': delete_word_backward(false),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(clip, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(clip, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_word(clipboard) {\n            return function delete_word() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (clipboard) {\n                        text_to_clipboard(clip, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_word_backward(clipboard) {\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]+ *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (clipboard) {\n                            text_to_clipboard(clip, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val();\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then)) {\n                                ret.then(insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home(line) {\n            function home() {\n                self.position(0);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var string = command.substring(0, self.position());\n                        self.position(string.lastIndexOf('\\n') + 1);\n                    } else {\n                        home();\n                    }\n                };\n            } else {\n                return home;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function end(line) {\n            function end() {\n                self.position(text(command).length);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var lines = command.split('\\n');\n                        var pos = self.position();\n                        var sum = 0;\n                        for (var i = 0; i < lines.length; ++i) {\n                            sum += lines[i].length;\n                            if (sum > pos) {\n                                self.position(sum + i);\n                                return;\n                            }\n                        }\n                    }\n                    end();\n                };\n            } else {\n                return end;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                _class = _class.replace(/\\s+/g, ' ');\n                if (_class !== self.attr('class').replace(/\\s+/g, ' ')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (!is_mobile && clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('blink');\n                } else {\n                    cursor.removeClass('blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('inverted blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('inverted blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += line_marker;\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, options);\n                var output = formatted[0];\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    if (string.match(/\\\\$/)) {\n                        string += '\\\\';\n                    }\n                    string = '[[;;]' + string + ']';\n                }\n                return string;\n            }\n            var len = length(string);\n            if (len === 1) {\n                return formatting(string);\n            }\n            var result = [];\n            // len - 1 break the command line $.terminal.substring will return\n            // empty string for out of bound indexes\n            for (var i = 0; i < len; ++i) {\n                var text = $.terminal.substring(string, i, i + 1);\n                result.push(formatting(text));\n            }\n            return result.join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str) {\n            return $.terminal.length(str);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var end_line = string.match(line_marker_re);\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                }\n                var cursor_end_line = false;\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                if (ch_unit_bug) {\n                    cursor.width(char_width);\n                }\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        cursor_end_line = true;\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                cursor.toggleClass('end-line', cursor_end_line);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                var end_line = string.match(line_marker_re);\n                var result = '<div role=\"presentation\" aria-hidden=\"true\"';\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                    result += ' class=\"end-line\"';\n                }\n                result += '>' + format(string, before || '') + '</div>';\n                return result;\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                self.find('div:not(.cursor-line,.clipboard-wrapper)').remove();\n                self.css('visibility', 'hidden');\n                before.html('');\n                // long line\n                if (strlen(text(formatted)) > num_chars - prompt_len - 1 ||\n                    formatted.match(/\\n/)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cursor-line ~ div:last-of-type').append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.css('top', in_line * 14 + 'px');\n                }\n                self.css('visibility', '');\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function cmp(search_pos, pos) {\n                var opts = $.extend({}, settings, {\n                    position: pos\n                });\n                var guess = $.terminal.apply_formatters(command, opts)[1];\n                if (guess === search_pos) {\n                    return 0;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = text(string);\n                var codepoint_len = string.length;\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars);\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        prompt.call(self, set);\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function clean(string) {\n            return string.replace(/((?!\\\\).)\\\\(?:&#93;|])/g, '$1&#93;');\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = clean(string);\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = clean(string);\n                    if (!stay) {\n                        self.position(text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = text(command);\n                var len = text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = clean(string);\n                if (!stay) {\n                    self.position(len, true, true);\n                } else {\n                    fix_textarea();\n                }\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cursor').next().remove().end().prev().remove().\n                    end().remove();\n                self.find('.prompt, .clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    var string = formatting(command, true);\n                    var len = length(string);\n                    var command_len = text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                var new_num_chars;\n                if (num) {\n                    new_num_chars = num;\n                } else {\n                    new_num_chars = get_num_chars(char_width);\n                }\n                if (num_chars !== new_num_chars) {\n                    num_chars = new_num_chars;\n                    redraw();\n                    draw_prompt();\n                }\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            enable: function() {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (clip.is(':not(:focus)')) {\n                            clip.focus();\n                        }\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE ignore\n                    }\n                    animation(true);\n                    if (is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        //debug_object(self, 'cmd')('display_position');\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (settings.prompt !== false) {\n            prompt = settings.prompt;\n            draw_prompt();\n        }\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // prevent_keypress - hack for Android that was inserting characters on\n        // backspace\n        var prevent_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        // ---------------------------------------------------------------------\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            var result;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keypress = true;\n                no_keydown = false;\n            }\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //prevent_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled || key === 'CTRL+C') {\n                if (hold) {\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 &&\n                        key.indexOf(settings.repeatTimeoutKeys) !== -1) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                } else {\n                    self.stopTime('hold');\n                    self.oneTime(settings.holdTimeout, 'hold', function() {\n                        hold = true;\n                    });\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    prevent_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //prevent_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (prevent_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native || e.fake) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var chr = val.slice(position);\n                    if (chr.length === 1 || backspace) {\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = chr.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : chr, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, chr.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event).bind('keydown.cmd', keydown_event)\n            .bind('keyup.cmd', clear_hold).bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    if (!$target.is('.prompt') && down) {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_html() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\](?:[^\\]]*[^\\\\](\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[([!gbiuso]*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]$/gi;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var url_full_re = /^(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)$/gi;\n    var email_full_re = /^((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))$/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_begin_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\]?$/i;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: TOOLS\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        var agent = window.navigator.userAgent;\n        if (agent.match(/MSIE|Trident/) && !agent.match(/IEMobile/)) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    // -------------------------------------------------------------------------\n    var ch_unit_bug = false;\n    $(function() {\n        function width(e) {\n            return e[0].getBoundingClientRect().width;\n        }\n        var base = '<span style=\"font-family: monospace;visibility:hidden;';\n        var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>').appendTo('body');\n        var space = $(base + '\">&nbsp;</span>').appendTo('body');\n        ch_unit_bug = width(ch) !== width(space);\n        ch.remove();\n        space.remove();\n    });\n\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    function char_len(chr) {\n        return entity_re.test(chr) ? 1 : chr.length;\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_entity = string.match(entity_re);\n        if (match_entity) {\n            return match_entity[1];\n        }\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.slice(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.slice(1).match(combine_chr_re)) {\n                return string.slice(0, 3);\n            }\n            return string.slice(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + char_len(chr);\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {len: strlen(chr), chr: chr};\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            str: spec.chr\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            str: last.str + spec.chr\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    str: spec.chr,\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.str;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + spec.str + '</span>';\n                } else {\n                    return '<span style=\"' + style + '\">' + spec.str + '</span>';\n                }\n            }).join('');\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var cmp = compare_fn(search_pos, mid);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn\n            );\n        } else {\n            return -1;\n        }\n    }\n    // -----------------------------------------------------------------\n    // :: selection utilities - should work in modern browser including IE9\n    // -----------------------------------------------------------------\n    function get_selected_html() {\n        var html = '';\n        if (is_function(window.getSelection)) {\n            var sel = window.getSelection();\n            if (sel.rangeCount) {\n                var container = document.createElement('div');\n                for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        return html;\n    }\n    // -----------------------------------------------------------------\n    function with_selection(fn) {\n        var html = '';\n        var ranges = [];\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.rangeCount) {\n                var container = document.createElement(\"div\");\n                for (var i = 0, len = selection.rangeCount; i < len; ++i) {\n                    var range = selection.getRangeAt(i).cloneRange();\n                    ranges.push(range);\n                    container.appendChild(range.cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        fn(html);\n        if (ranges.length) {\n            selection.removeAllRanges();\n            ranges.forEach(function(range) {\n                selection.addRange(range);\n            });\n        }\n        return html !== '';\n    }\n    // -----------------------------------------------------------------\n    function process_selected_line() {\n        var $self = $(this);\n        var result = $self.text();\n        if ($self.hasClass('end-line')) {\n            result += '\\n';\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------\n    function process_selected_html(html) {\n        var stdout;\n        var text = '';\n        var $html = $('<div>' + html + '</div>');\n        if (html.match(/<\\/div>/)) {\n            stdout = $html.find('div[data-index]').map(function() {\n                return $(this).find('> div').map(process_selected_line).get().join('');\n            }).get().join('\\n');\n            text = stdout;\n        }\n        var $prompt = $html.find('.prompt');\n        if ($prompt.length) {\n            if (text.length) {\n                text += '\\n';\n            }\n            text += $prompt.text();\n        }\n        var $cmd_lines = $html.find('[role=\"presentation\"]');\n        if ($cmd_lines.length) {\n            text += $cmd_lines.map(process_selected_line).get().join('');\n        }\n        if (!text.length && html) {\n            text = $html.text();\n        }\n        return text.replace(/\\xA0/g, ' '); // fix &nbsp; space\n    }\n    // ---------------------------------------------------------------------\n    // :: copy given DOM element text to clipboard\n    // ---------------------------------------------------------------------\n    var text_to_clipboard;\n    if (is_function(document.queryCommandSupported) &&\n        document.queryCommandSupported('copy')) {\n        text_to_clipboard = function text_to_clipboard($textarea, text) {\n            var val = $textarea.val();\n            var had_focus = $textarea.is(':focus');\n            var pos = $textarea.caret();\n            $textarea.val(text).focus();\n            $textarea[0].select();\n            document.execCommand('copy');\n            $textarea.val(val);\n            if (had_focus) {\n                $textarea.caret(pos);\n            }\n            return true;\n        };\n    } else {\n        text_to_clipboard = $.noop;\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: 'DEV',\n        date: 'Sun, 07 Apr 2019 16:34:11 +0000',\n        // colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen', 'rebeccapurple'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            length(rep_string) -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += length(rep_string) - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_space(i) && (not_formatting || opening)) {\n                    if (space === -1 && prev_space !== i || space !== -1) {\n                        space = i;\n                        space_count = count;\n                    }\n                }\n                var braket = string[i].match(/[[\\]]/);\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var data = {\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: offset + 1,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1) {\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                var char = get_next_character(substring);\n                if (char.length > 1) {\n                    i += char.length - 1;\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(string);\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return chars.slice(start_index, end_index).join('');\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var re = /(&[^;]+);$/;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                var m;\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    // correct index for html entity\n                    m = string.slice(0, start + 1).match(re);\n                    if (m) {\n                        start -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    m = string.slice(0, end + 1).match(re);\n                    if (m) {\n                        end -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function - and fix unclosed &\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            string = string.replace(format_re, function(_, format, text) {\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                return '[[' + format + semicolons + safe(text) + ']' + text + ']';\n            });\n            return $.terminal.amp(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var chars = $.terminal.split_characters(text(line));\n                var last_char = chars[chars.length - 1];\n                var end_index = line_length - (last_char ? last_char.length : 1);\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                if (last_bracket) {\n                    end_index -= 1;\n                }\n                $.terminal.iterate_formatting(line, function(data) {\n                    var last_iteraction = data.index === end_index;\n                    var chr, substring;\n                    if (data.length >= length || last_iteraction ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).slice(data.space_count);\n                            // real length, not counting formatting\n                            var text_len = stripped.length;\n                            var limit = data.count + length + 1;\n                            stripped = stripped.slice(0, limit).trim();\n                            if (stripped.match(/\\s/) || limit < text_len) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (last_iteraction && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\])[\\s\\S]*/;\n            return string.split(re).filter(Boolean).map(function(string) {\n                if (string.match(/^\\[\\[/)) {\n                    if (!$.terminal.is_formatting(string)) {\n                        string += ']';\n                        stack.push(string.replace(format_re, '$1'));\n                    }\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        string = stack[stack.length - 1] + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (ret instanceof Array && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (formatter instanceof Array) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                allowedAttributes: [],\n                anyLinks: false\n            }, options || {});\n            function format(s, style, color, background, _class, data_text, text) {\n                var attrs;\n                if (data_text.match(/;/)) {\n                    try {\n                        var splitted = data_text.split(';');\n                        attrs = JSON.parse(splitted.slice(1).join(';'));\n                        data_text = splitted[0];\n                    } catch (e) {\n                    }\n                }\n                if (text === '') {\n                    return ''; //'<span>&nbsp;</span>';\n                }\n                // inside formatting we need to unescape escaped slashes\n                text = safe(text).replace(/\\\\\\\\/g, '\\\\');\n                var style_str = '';\n                if (style.indexOf('b') !== -1) {\n                    style_str += 'font-weight:bold;';\n                }\n                var text_decoration = [];\n                if (style.indexOf('u') !== -1) {\n                    text_decoration.push('underline');\n                }\n                if (style.indexOf('s') !== -1) {\n                    text_decoration.push('line-through');\n                }\n                if (style.indexOf('o') !== -1) {\n                    text_decoration.push('overline');\n                }\n                if (text_decoration.length) {\n                    style_str += 'text-decoration:' +\n                        text_decoration.join(' ') + ';';\n                }\n                if (style.indexOf('i') !== -1) {\n                    style_str += 'font-style:italic;';\n                }\n                if ($.terminal.valid_color(color)) {\n                    style_str += 'color:' + color + ';' +\n                        '--color:' + color + ';';\n                    if (style.indexOf('!') !== -1) {\n                        style_str += '--link-color:' + color + ';';\n                    }\n                    if (style.indexOf('g') !== -1) {\n                        style_str += 'text-shadow:0 0 5px ' + color + ';';\n                    }\n                }\n                if ($.terminal.valid_color(background)) {\n                    style_str += 'background-color:' + background + ';';\n                }\n                var data;\n                if (data_text === '') {\n                    data = text;\n                } else {\n                    data = data_text.replace(/&#93;/g, ']')\n                        .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                }\n                var extra = extra_css(text, options);\n                if (extra) {\n                    text = wide_characters(text, options);\n                    style_str += extra;\n                }\n                var result;\n                if (style.indexOf('!') !== -1) {\n                    if (data.match(email_re)) {\n                        result = '<a href=\"mailto:' + data + '\"';\n                    } else {\n                        // only http and ftp links (prevent javascript)\n                        // unless user force it with anyLinks option\n                        if (!settings.anyLinks &&\n                            !data.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/)) {\n                            data = '';\n                        }\n                        result = '<a target=\"_blank\"';\n                        if (data) {\n                            result += ' href=\"' + data + '\"';\n                        }\n                        var rel = [\"noopener\"];\n                        if (settings.linksNoReferrer) {\n                            rel.unshift(\"noreferrer\");\n                        }\n                        if (settings.linksNoFollow) {\n                            rel.unshift(\"nofollow\");\n                        }\n                        result += ' rel=\"' + rel.join(' ') + '\"';\n                    }\n                    // make focus to terminal textarea that will enable\n                    // terminal when pressing tab and terminal is disabled\n                    result += ' tabindex=\"1000\"';\n                } else {\n                    result = '<span';\n                }\n                if (style_str !== '') {\n                    result += ' style=\"' + style_str + '\"';\n                }\n                if (attrs) {\n                    var keys = Object.keys(attrs);\n                    if (keys.length && settings.allowedAttributes.length) {\n                        // filter JSON attributes by regex or string\n                        // in allowedAttributes options\n                        keys = keys.filter(function(name) {\n                            if (name === 'data-text') {\n                                return false;\n                            }\n                            var allowed = false;\n                            var filters = settings.allowedAttributes;\n                            for (var i = 0; i < filters.length; ++i) {\n                                if (filters[i] instanceof RegExp) {\n                                    if (filters[i].test(name)) {\n                                        allowed = true;\n                                        break;\n                                    }\n                                } else if (filters[i] === name) {\n                                    allowed = true;\n                                    break;\n                                }\n                            }\n                            return allowed;\n                        });\n                        if (keys.length) {\n                            result += ' ' + keys.map(function(name) {\n                                var value = attrs[name].replace(/\"/g, '&quot;');\n                                return name + '=\"' + value + '\"';\n                            }).join(' ');\n                        }\n                    }\n                }\n                if (_class !== '') {\n                    result += ' class=\"' + _class + '\"';\n                }\n                if (style.indexOf('!') !== -1) {\n                    result += '>' + text + '</a>';\n                } else {\n                    result += ' data-text=\"' + data.replace(/\"/g, '&quot;') + '\">' +\n                        text + '</span>';\n                }\n                return result;\n            }\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, format);\n                    } else {\n                        text = safe(text);\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string) {\n            return $.terminal.split_characters(text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                if (typeof arg !== 'string') {\n                    arg = String(arg);\n                }\n                if (arg.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (arg.match(/^--/)) {\n                    var name = arg.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (arg.match(/^-/)) {\n                    var single = arg.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [[ .... ]] in echo\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: object that can be used in string methods intead of regex\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var rect;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd')).html('&nbsp;');\n            rect = $prompt[0].getBoundingClientRect();\n            $prompt.remove();\n        } else {\n            var temp = $('<div class=\"terminal temp\"><div class=\"terminal-wrapper\">' +\n                         '<div class=\"terminal-output\"><div><div class=\"line\" style' +\n                         '=\"float: left\"><span>&nbsp;</span></div></div></div></div>')\n                .appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            rect = temp.find('.line')[0].getBoundingClientRect();\n        }\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        if (temp) {\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2019 Jakub T. Jankiewicz ' +\n        '<https://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2019 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        allowedAttributes: ['title', /^aria-/, 'id', /^data-/],\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    //object_debugger($.fn, 'jquery')();\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (object instanceof Array) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // Display line code in the file if line numbers are present\n        function print_line(url_spec) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    self.echo('[[b;white;]' + file + ']');\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    self.echo(code.slice(n - 2, n + 3).map(function(line, i) {\n                        if (i === 2) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return '[' + (n + i - 1) + ']: ' + line;\n                    }).join('\\n')).resume();\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                /*\n                if (login) {\n                    var token = self.token(true);\n                    if (token) {\n                        command.args = [token].concat(command.args);\n                    } else {\n                        terminal.error('&#91;AUTH&#93; ' + strings.noTokenError);\n                        return;\n                    }\n                }*/\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== false && settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = response.procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.describe === false) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        function push_line(string) {\n            output_buffer.push({line: string});\n        }\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width,\n                    allowedAttributes: options.allowedAttributes || []\n                };\n                string = $.terminal.normalize(string);\n                var cols = self.cols();\n                if ((strlen(text(string)) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push('<span></span>');\n                        } else {\n                            var data = {\n                                line: $.terminal.format(\n                                    array[i],\n                                    format_options\n                                )\n                            };\n                            if (i === len - 1) {\n                                data.newline = true;\n                            }\n                            output_buffer.push(data);\n                        }\n                    }\n                } else {\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(push_line);\n                }\n            } else {\n                push_line(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function links(string) {\n            function format(_, style, color, background, _class, data, text) {\n                function formatting(s, text) {\n                    return '[[' + [\n                        style + (s || ''),\n                        color,\n                        background,\n                        _class,\n                        data || text\n                    ].join(';') + ']';\n                }\n                function escaped(_) {\n                    return ']' + formatting('!', _) + _ + ']' + formatting();\n                }\n                if (!style.match(/!/)) {\n                    if (text.match(email_full_re) || text.match(url_full_re)) {\n                        return formatting('!', text) + text + ']';\n                    } else if (text.match(email_re) || text.match(url_nf_re)) {\n                        var output = text.replace(email_re, escaped)\n                            .replace(url_nf_re, escaped);\n                        return formatting('', data) + output + ']';\n                    }\n                }\n                return _;\n            }\n            if (!(string.match(email_re) || string.match(url_nf_re))) {\n                return string;\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return string.replace(email_re, '[[!;;]$1]').\n                    replace(url_nf_re, '[[!;;]$1]');\n            }\n            return $.terminal.format_split(string).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    return str.replace(format_parts_re, format);\n                } else {\n                    return str.replace(email_re, '[[!;;]$1]').\n                        replace(url_nf_re, '[[!;;]$1]');\n                }\n            }).join('');\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop,\n                    convertLinks: settings.convertLinks\n                }, line.options || {});\n                var string;\n                var arg = line.string;\n                var is_fn = is_function(arg);\n                if (is_fn) {\n                    arg = arg();\n                }\n                if (get_type(arg) !== 'string') {\n                    if (is_function(settings.parseObject)) {\n                        var ret = settings.parseObject(arg);\n                        if (get_type(ret) === 'string') {\n                            string = ret;\n                        }\n                    } else if (arg instanceof Array) {\n                        string = $.terminal.columns(arg, self.cols(), settings.tabs);\n                    } else {\n                        string = String(arg);\n                    }\n                } else {\n                    string = arg;\n                }\n                if (string !== '') {\n                    if (!line_settings.raw) {\n                        if (line_settings.formatters) {\n                            try {\n                                string = $.terminal.apply_formatters(\n                                    string,\n                                    settings\n                                );\n                            } catch (e) {\n                                display_exception(e, 'FORMATTING');\n                            }\n                        }\n                        var parts = string.split(format_exec_re);\n                        string = $.map(parts, function(string) {\n                            if (string && string.match(format_exec_re) &&\n                                !$.terminal.is_formatting(string)) {\n                                // redraw should not execute commands and it have\n                                // and lines variable have all extended commands\n                                string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                if (line_settings.exec) {\n                                    var prev_cmd;\n                                    if (prev_command) {\n                                        prev_command = prev_command.command.trim();\n                                    }\n                                    if (prev_cmd === string.trim()) {\n                                        self.error(strings().recursiveCall);\n                                    } else {\n                                        $.terminal.extended_command(self, string, {\n                                            invokeMethods: settings.invokeMethods\n                                        });\n                                    }\n                                }\n                                return '';\n                            } else {\n                                return string;\n                            }\n                        }).join('');\n                        if (string === '') {\n                            return;\n                        }\n                        if (line_settings.convertLinks) {\n                            string = links(string);\n                        }\n                        string = crlf($.terminal.normalize(string));\n                        string = $.terminal.encode(string, {\n                            tabs: settings.tabs\n                        });\n                    }\n                }\n                buffer_line(string, line.index, line_settings);\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var string = line[0];\n                    var options = line[1];\n                    if (get_type(string) === 'function') {\n                        string = string();\n                    }\n                    if (get_type(string) !== 'string') {\n                        string = String(string);\n                    }\n                    lines_to_show.push({\n                        string: string,\n                        index: index,\n                        options: options\n                    });\n                });\n                lines_to_show = lines_to_show.slice(lines_to_show.length - limit - 1);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        string: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                fire_event('onAfterRedraw');\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        settings.greetings.call(self, self.echo);\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            // true will return last rendered string\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                convertLinks: false,\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            self.echo(prompt + command, options);\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    // it should not pause when user return promise from read()\n                    if (!force_awake) {\n                        self.pause(settings.softPause);\n                    }\n                    force_awake = false;\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        (result.done || result.then).call(result, show);\n                    } else {\n                        return $.when(result).done(show);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (!exec) {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (is_function(settings.onBeforeLogout)) {\n                try {\n                    if (settings.onBeforeLogout.call(self, self) === false) {\n                        return;\n                    }\n                } catch (e) {\n                    settings.onBeforeLogout = $.noop;\n                    display_exception(e, 'onBeforeLogout');\n                }\n            }\n            clear_loging_storage();\n            if (is_function(settings.onAfterLogout)) {\n                try {\n                    settings.onAfterLogout.call(self, self);\n                } catch (e) {\n                    settings.onAfterLogout = $.noop;\n                    display_exception(e, 'onAfterlogout');\n                }\n            }\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            var prompt = interpreter.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt, 'string');\n            }\n            if (prompt !== command_line.prompt()) {\n                command_line.prompt(interpreter.prompt);\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name])) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        var scroll_to_view = (function() {\n            function scroll_to_view(visible) {\n                if (!visible) {\n                    // try catch for Node.js unit tests\n                    try {\n                        var cursor = self.find('.cursor');\n                        var offset = cursor.offset();\n                        var term_offset = self.offset();\n                        self.scrollTop(offset.top - term_offset.top - 5);\n                        return true;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            // we don't want debounce in Unit Tests\n            try {\n                if (typeof global.it === 'function') {\n                    return scroll_to_view;\n                }\n            } catch (e) {\n            }\n            return debounce(scroll_to_view, 100, {\n                leading: true,\n                trailing: false\n            });\n        })();\n        // ---------------------------------------------------------------------\n        function move_cursor_visible() {\n            var cursor = self.find('.cursor');\n            return cursor.is_fully_in_viewport(self).then(scroll_to_view);\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume();\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                with_selection(function(html) {\n                    if (html === '') {\n                        var command = self.get_command();\n                        var position = self.get_position();\n                        command = command.slice(0, position) + '^C' +\n                            command.slice(position + 2);\n                        echo_command(command);\n                        self.set_command('');\n                    } else {\n                        var clip = self.find('textarea');\n                        text_to_clipboard(clip, process_selected_html(html));\n                    }\n                });\n                return false;\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            if (result && is_function(result.then)) {\n                                result.then(resolve);\n                            }\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        // ---------------------------------------------------------------------\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (self.is('body,html')) {\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        }\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                lines = [];\n                output.html('');\n                fire_event('onClear');\n                self.attr({scrollTop: 0});\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        if (ret && (ret.done || ret.then)) {\n                            (ret.done || ret.then).call(ret, function() {\n                                d.resolve(self);\n                            });\n                        }\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        while (self.level() > level) {\n                            self.pop(undefined, true);\n                        }\n                        if (settings.history) {\n                            command_line.history().enable();\n                        }\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then)) {\n                                self.pause();\n                                ret.then(function(token) {\n                                    login_callback(user, token);\n                                    self.resume();\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                // local copy\n                commands = commands.slice();\n                // default commands should not match for arguments\n                if (!self.before_cursor(false).match(/\\s/)) {\n                    if (settings.clear && $.inArray('clear', commands) === -1) {\n                        commands.push('clear');\n                    }\n                    if (settings.exit && $.inArray('exit', commands) === -1) {\n                        commands.push('exit');\n                    }\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (regex.test(commands[i])) {\n                            var match = commands[i];\n                            if (quote === '\"') {\n                                match = match.replace(/\"/g, '\\\\\"');\n                            }\n                            if (!quote && options.escape) {\n                                match = match.replace(/([\"'() ])/g, '\\\\$1');\n                            }\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(string, matched, sensitive);\n                        if (common) {\n                            replace(string, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function() {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable();\n                    }\n                    command_line.find('.prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable();\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lenghts = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lenghts) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    $.each(output_buffer, function(i, data) {\n                        if (data === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(data) && is_function(data.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + data.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            data.finalize(wrapper.attr('data-index', data.index));\n                        } else {\n                            var line = data.line;\n                            var div = $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                            if (data.newline) {\n                                div.addClass('end-line');\n                            }\n                        }\n                    });\n                    limit_lines();\n                    fire_event('onFlush');\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                } catch (e1) {\n                    if (is_function(settings.exceptionHandler)) {\n                        try {\n                            settings.exceptionHandler.call(self, e1, 'TERMINAL (Flush)');\n                        } catch (e2) {\n                            settings.exceptionHandler = $.noop;\n                            alert_exception('[exceptionHandler]', e2);\n                        }\n                    } else {\n                        alert_exception('[Flush]', e1);\n                    }\n                } finally {\n                    output_buffer = [];\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, string, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (string === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        lines[line][0] = string;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            string: string,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have options\n            // :: * flush - indicate that arg should be send to DOM\n            // :: * raw - indicate if it should handle input as html\n            // :: * finalize - function call with container div\n            // :: * keepWords - inform how to wrap text\n            // :: * formatters - inform function if it should use formatters\n            // ::   on input string - good to prevent XSS when you want\n            // ::   advanced server side controling of terminal\n            // :: you can echo: promise, function, strings array or string\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                var arg_defined = arguments.length > 0;\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            keepWords: false,\n                            formatters: true,\n                            allowedAttributes: settings.allowedAttributes\n                        }, options || {});\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize(div);\n                                    }\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                        }\n                        if (typeof arg === 'function') {\n                            arg = arg.bind(self);\n                        } else if (typeof arg === 'undefined') {\n                            if (arg_defined) {\n                                arg = String(arg);\n                            } else {\n                                arg = '';\n                            }\n                        }\n                        process_line({\n                            string: arg,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        lines.push([arg, $.extend(locals, {\n                            exec: false\n                        })]);\n                        if (locals.flush) {\n                            self.flush();\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo);\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;error]');\n                    return '[[;;;error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    });\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('exception message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        return '[[;;;error]' + trace.replace(url_re, function(url) {\n                            return ']' + url + '[[;;;error]';\n                        }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('exception stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.attr('scrollTop') && amount > 0) {\n                        self.attr('scrollTop', 0);\n                    }\n                    pos = self.attr('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                // return from read() should not pause terminal\n                force_awake = true;\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    // restore mask\n                    self.set_mask(top.mask);\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self.scrollTop();\n                    height = self.outerHeight();\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var force_awake = false; // flag used to don't pause when user return read() call\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        if (typeof settings.width === 'number') {\n            self.width(settings.width);\n        }\n        if (typeof settings.height === 'number') {\n            self.height(settings.height);\n        }\n        var char_size = get_char_size(self);\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        var font_resizer = $('<div class=\"font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (init_interpreter instanceof Array) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        function context_callback_proxy(fn, type) {\n            if (fn.proxy) {\n                return fn;\n            }\n            var wrapper = function(callback) {\n                var ret = fn.call(self, callback, self);\n                if (ret && is_function(ret.then)) {\n                    ret.then(function(string) {\n                        if (typeof string === type) {\n                            callback(string);\n                        }\n                    });\n                }\n            };\n            wrapper.proxy = true;\n            return wrapper;\n        }\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents && is_function(settings.onPaste)) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event['text'] = object;\n                    } else if (object instanceof Blob) {\n                        event['image'] = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret) {\n                        if (is_function(ret.then)) {\n                            return ret.then(function(ret) {\n                                echo(ret, true);\n                            });\n                        } else {\n                            echo(ret, true);\n                        }\n                    } else {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^data:/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(echo);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(itrp) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                itrp.completion = 'settings';\n            }\n            var prompt = settings.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt, 'string');\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, itrp));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                prompt: prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    move_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    var visible = move_cursor_visible();\n                    visible.then(function(visible) {\n                        if (!visible) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_html() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    self.on('contextmenu.terminal', function(e) {\n                        if (get_selected_html() === '') {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                wrapper.css('overflow', 'hidden');\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    var props = {\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    };\n                                    if (!is_css_variables_supported) {\n                                        var in_line = self.find('.cmd .cursor-line')\n                                            .prevUntil('.prompt').length;\n                                        props.top = in_line * 14 + 'px';\n                                    }\n                                    clip.css(props);\n                                    wrapper.css('overflow', '');\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href);\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                self.resizer('unbind').resizer(resize);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                });\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (was_enabled && !visible) {\n                    self.disable();\n                }\n                if (visible) {\n                    create_resizers();\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                    }\n                }\n                if (window.IntersectionObserver && self.css('position') !== 'fixed') {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: document.body\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 100);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if (have_scrollbar() || ret === false || !event.ctrlKey) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        self.data('terminal', self);\n        return self;\n    }; // terminal plugin\n});\n"]}