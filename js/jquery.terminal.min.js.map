{"version":3,"sources":["js/jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","value","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","trigger","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","jquery_resolve","defer","Deferred","promise","is_fully_in_viewport","is_visible","node","container","box","getBoundingClientRect","viewport","top","bottom","height","IntersectionObserver","item_observer","entry","isIntersecting","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","message","exception_message","setTimeout","scrollbar_event","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","init","defined","filter","append","front","restart","Boolean","forEach","Stack","size","pop","concat","History","name","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","clear","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","noop","onCommandChange","inputStyle","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","repeatTimeoutKeys","tabindex","tabs","options","settings","maybe_data","id","clip","autocapitalize","spellcheck","is_mobile","val","width","num_chars","char_width","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","animation","restart_animation","paste_count","get_char_pos","closest","parent","prevAll","prevUntil","nextUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","keys","which","keymap","default_keymap","ALT+D","delete_word","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","isResolved","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","ARROWUP","prev_history","CTRL+P","ARROWDOWN","next_history","CTRL+N","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+END","CTRL+E","HOME","home","CTRL+HOME","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_word_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","clipboard","substring","m","isenabled","paste","fix_textarea","then","first_up_history","line","string","lastIndexOf","lines","sum","mobile_focus","fix_cursor","animation_supported","style","getComputedStyle","animationName","getPropertyValue","_class","className","position_only","is_android","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","terminal","escape_regex","get_char_width","$prompt","html","get_num_chars","Math","floor","get_splitted_command_line","split_equal","skip_empty","strip","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","unixFormattingEscapeBrackets","formatted","apply_formatters","max","normalize","stack","before","encoded","encode","wrap","is_formatting","start","prev","after","cursor_line","draw_cursor_line","ch_unit_bug","before_str","c_before","cond","noselect","cursor_len","setProperty","div","lines_after","last_ins","insertAfter","lines_before","css","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","is_css_variables_supported","find_position","cmp","search_pos","opts","guess","codepoint_len","binary_search","chars","split_characters","crlf","encoded_last_line","last_line","fire_change_command","clean","option","delete","stay","removed","silent","new_keymap","original","bare_command","destroy","doc","keypress_event","keydown_event","input_event","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","invoke_key","shortcut","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","prevent_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold","hold_pause","skip_insert","is_backspace","is_single","clear_reverse_search_key","fake","exception","keydown","clear_hold","keypress","is_key_native","normalized","inArray","event","type","chr","keycode","charCodeAt","abs","was_down","count","$target","down","button","originalEvent","get_selected_text","KeyboardEvent","combine_chr_re","astral_symbols_re","emoji_re","entity_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","color_hex_re","url_re","url_nf_re","email_re","url_full_re","email_full_re","command_re","extended_command_re","format_begin_re","format_start_re","format_end_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","domPrefixes","elm","createElement","is_ch_unit_supported","agent","CSS","supports","proto","getOwnPropertyDescriptor","check","substr","vendor","opera","base","ch","space","bare_text","safe","char_len","get_next_character","match_entity","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","compare_fn","mid","$div","select_all","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","term","onTerminalChange","setBaseAndExtent","setStart","childNodes","removeAllRanges","addRange","process_command","args","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","have_formatting","format_split","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","iterate_formatting","is_space","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","in_text","space_count","prev_space","braket","char","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","amp","keep_words","prev_format","first_index","line_length","last_char","last_bracket","last_iteraction","can_break","stripped","text_len","new_index","closed_formatting","matched","sp","nested_formatting","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","Exception","linksNoReferrer","linksNoFollow","allowedAttributes","anyLinks","background","data_text","attrs","style_str","text_decoration","extra","rel","unshift","allowed","filters","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","done","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","url","method","params","success","deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","terminal_ready","get_char_size","rect","visiblity","temp","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","raw","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","onAfterRedraw","onEchoCommand","onFlush","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","display_object","echo","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","names","found","make_interpreter","user_intrp","finalize","rpc_count","fn_interpreter","recur","interpreters","new_obj","make_json_rpc_login","user","passwd","output_buffer","NEW_LINE","buffer_line","format_options","words","keepWords","links","escaped","process_line","line_settings","is_fn","parseObject","parts","prev_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","flush","fire_event","limit_lines","$lines","for_remove","parents","$self","show_greetings","greetings","signature","echo_command","get_command","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","invoke","force_awake","when","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","onBeforeLogout","clear_loging_storage","onAfterLogout","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","fun","init_queue","onStart","move_cursor_visible","term_offset","scrollTop","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","complete","word","escape","before_cursor","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","terminal_id","user_export","get_prompt","view","when_ready","set_prompt","ignore_hash","state","d","cmd_ready","delayed_commands","autologin","infinite","logins","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","num_rows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","frozen","lenghts","is_bottom","get_output","new_num_chars","new_num_rows","wrapper","replaceWith","e1","e2","remove_line","arg_defined","locals","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","cancel","infiniteLogin","push_settings","object_or_name","prefix","font_resizer","blur_terminal","focus_terminal","visibility_observer","mutation_observer","disconnect","defunct","scrollHeight","scroll_height","scroll_top","outerHeight","command_queue","old_width","old_height","old_enabled","ignoreSystemDescribe","base_interpreter","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","itrp","onResize","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","ignore_elements","mousedown","mouseup","timeout","dblclick","pageX","pageY","props","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","visibility_checker","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version DEV\n *\n * This file is part of jQuery Terminal. https://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2019 Jakub T. Jankiewicz <https://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * Date: Sat, 06 Apr 2019 19:04:24 +0000\n */\n/* global location, setTimeout, window, global, sprintf, setImmediate,\n          IntersectionObserver,  ResizeObserver, module, require, define,\n          setInterval, clearInterval, Blob */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback) {\n        var trigger = arguments.length === 0;\n        var unbind = arguments[0] === \"unbind\";\n        if (!trigger && !unbind && !is_function(callback)) {\n            throw new Error('Invalid argument, it need to a function or string ' +\n                            '\"unbind\" or no arguments.');\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (trigger || unbind) {\n                callbacks = $this.data('callbacks');\n                if (trigger) {\n                    callbacks && callbacks.fire();\n                } else {\n                    if (callback && callbacks) {\n                        callbacks.remove(callback);\n                        if (!callbacks.has()) {\n                            callbacks = null;\n                        }\n                    } else {\n                        callbacks = null;\n                    }\n                    if (!callbacks) {\n                        $this.removeData('callbacks');\n                        if (window.ResizeObserver) {\n                            var observer = $this.data('observer');\n                            if (observer) {\n                                observer.unobserve(this);\n                                $this.removeData('observer');\n                            }\n                        } else {\n                            iframe = $this.find('> iframe');\n                            if (iframe.length) {\n                                // just in case of memory leaks in IE\n                                $(iframe[0].contentWindow).off('resize').remove();\n                                iframe.remove();\n                            } else if ($this.is('body')) {\n                                $(window).off('resize.resizer');\n                            }\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass('resizer').appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    function jquery_resolve(value) {\n        var defer = jQuery.Deferred();\n        defer.resolve(value);\n        return defer.promise();\n    }\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.is_fully_in_viewport = (function() {\n        function is_visible(node, container) {\n            var box = node.getBoundingClientRect();\n            var viewport = container[0].getBoundingClientRect();\n            var top = box.top - viewport.top;\n            var bottom = box.bottom - viewport.top;\n            var height = container.height();\n            return bottom > 0 && top <= height;\n        }\n        if (window.IntersectionObserver) {\n            return function(container) {\n                var node = this[0];\n                var defer = jQuery.Deferred();\n                var item_observer = new window.IntersectionObserver(function(entry) {\n                    defer.resolve(entry.isIntersecting);\n                    item_observer.unobserve(node);\n                }, {\n                    root: container[0]\n                });\n                item_observer.observe(node);\n                return defer.promise();\n            };\n        } else {\n            return function(container) {\n                return jquery_resolve(is_visible(this[0], container));\n            };\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = init instanceof Array ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (new_data instanceof Array) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        self.append('<span class=\"prompt\"></span>');\n        self.append('<div class=\"cursor-line\">' +\n                    '<span></span>' +\n                    '<span class=\"cursor\"><span><span>&nbsp;</span></span></span>' +\n                    '<span></span>' +\n                    '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(self.find('.cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: settings.tabindex\n        }).addClass('clipboard').appendTo(self);\n        if (!is_mobile) {\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.nextUntil('textarea').length;\n                return node.find('span[data-text]').length +\n                    node.prevUntil('.prompt').find('span[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ARROWUP',\n            'DOWN': 'ARROWDOWN',\n            'LEFT': 'ARROWLEFT',\n            'RIGHT': 'ARROWRIGHT',\n            'DEL': 'DELETE',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function get_key(e) {\n            if (e.key) {\n                var key = e.key.toUpperCase();\n                if (key_mapping[key]) {\n                    key = key_mapping[key];\n                }\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (keycodes[which] instanceof Array) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_word(true),\n            'HOLD+DELETE': delete_word(false),\n            'HOLD+SHIFT+DELETE': delete_word(false),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                var promise;\n                if (settings.commands) {\n                    promise = settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt) &&\n                    (promise && promise.isResolved() || !promise)) {\n                    draw_prompt();\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': next_history,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': left,\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': right,\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end(true),\n            'CTRL+END': end(),\n            'CTRL+E': end(),\n            'HOME': home(true),\n            'CTRL+HOME': home(),\n            'CTRL+A': home(),\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_word_backward(true),\n            'HOLD+BACKSPACE': delete_word_backward(false),\n            'HOLD+SHIFT+BACKSPACE': delete_word_backward(false),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_word(clipboard) {\n            return function delete_word() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (clipboard) {\n                        text_to_clipboard(self, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_word_backward(clipboard) {\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]+ *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (clipboard) {\n                            text_to_clipboard(self, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val();\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then)) {\n                                ret.then(insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home(line) {\n            function home() {\n                self.position(0);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var string = command.substring(0, self.position());\n                        self.position(string.lastIndexOf('\\n') + 1);\n                    } else {\n                        home();\n                    }\n                };\n            } else {\n                return home;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function end(line) {\n            function end() {\n                self.position(text(command).length);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var lines = command.split('\\n');\n                        var pos = self.position();\n                        var sum = 0;\n                        for (var i = 0; i < lines.length; ++i) {\n                            sum += lines[i].length;\n                            if (sum > pos) {\n                                self.position(sum + i);\n                                return;\n                            }\n                        }\n                    }\n                    end();\n                };\n            } else {\n                return end;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                if (_class !== self.attr('class')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (!is_mobile && clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('blink');\n                } else {\n                    cursor.removeClass('blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('inverted blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('inverted blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += ' ';\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, options);\n                var output = formatted[0];\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    if (string.match(/\\\\$/)) {\n                        string += '\\\\';\n                    }\n                    string = '[[;;]' + string + ']';\n                }\n                return string;\n            }\n            var len = length(string);\n            if (len === 1) {\n                return formatting(string);\n            }\n            var result = [];\n            // len - 1 break the command line $.terminal.substring will return\n            // empty string for out of bound indexes\n            for (var i = 0; i < len; ++i) {\n                var text = $.terminal.substring(string, i, i + 1);\n                result.push(formatting(text));\n            }\n            return result.join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str) {\n            return $.terminal.length(str);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                if (ch_unit_bug) {\n                    cursor.width(char_width);\n                }\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                // fix for command line selection\n                var cond = settings.last || settings.length === 1;\n                var noselect = settings.position === (cond ? len : len - 1);\n                cursor.toggleClass('noselect', noselect);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                return '<div role=\"presentation\" aria-hidden=\"true\">' +\n                    format(string, before || '') +\n                    '</div>';\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                self.find('div:not(.cursor-line,.clipboard-wrapper)').remove();\n                self.css('visibility', 'hidden');\n                before.html('');\n                // long line\n                if (strlen(text(formatted)) > num_chars - prompt_len - 1 ||\n                    formatted.match(/\\n/)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cursor-line ~ div:last-of-type').append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.css('top', in_line * 14 + 'px');\n                }\n                self.css('visibility', '');\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function cmp(search_pos, pos) {\n                var opts = $.extend({}, settings, {\n                    position: pos\n                });\n                var guess = $.terminal.apply_formatters(command, opts)[1];\n                if (guess === search_pos) {\n                    return 0;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = text(string);\n                var codepoint_len = string.length;\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars);\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        prompt.call(self, set);\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function clean(string) {\n            return string.replace(/((?!\\\\).)\\\\(?:&#93;|])/g, '$1&#93;');\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = clean(string);\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = clean(string);\n                    if (!stay) {\n                        self.position(text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = text(command);\n                var len = text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = clean(string);\n                if (!stay) {\n                    self.position(len, true, true);\n                } else {\n                    fix_textarea();\n                }\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cursor').next().remove().end().prev().remove().\n                    end().remove();\n                self.find('.prompt, .clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    var string = formatting(command, true);\n                    var len = length(string);\n                    var command_len = text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                if (num) {\n                    num_chars = num;\n                } else {\n                    num_chars = get_num_chars(char_width);\n                }\n                redraw();\n                draw_prompt();\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            enable: function() {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (clip.is(':not(:focus)')) {\n                            clip.focus();\n                        }\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE ignore\n                    }\n                    animation(true);\n                    if (is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        //debug_object(self, 'cmd')('display_position');\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (typeof settings.prompt === 'string') {\n            prompt = settings.prompt;\n        } else {\n            prompt = '> ';\n        }\n        draw_prompt();\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // prevent_keypress - hack for Android that was inserting characters on\n        // backspace\n        var prevent_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        // ---------------------------------------------------------------------\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            var result;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keypress = true;\n                no_keydown = false;\n            }\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //prevent_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                self.oneTime(settings.holdTimeout, 'hold', function() {\n                    hold = true;\n                });\n                if (hold) {\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 &&\n                        key.indexOf(settings.repeatTimeoutKeys) !== -1) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    prevent_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //prevent_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (prevent_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native || e.fake) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var chr = val.slice(position);\n                    if (chr.length === 1 || backspace) {\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = chr.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : chr, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, chr.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event).bind('keydown.cmd', keydown_event)\n            .bind('keyup.cmd', clear_hold).bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    if (!$target.is('.prompt') && down) {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_text() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\](?:[^\\]]*[^\\\\](\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[([!gbiuso]*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]$/gi;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var url_full_re = /^(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)$/gi;\n    var email_full_re = /^((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))$/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_begin_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\]?$/i;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: TOOLS\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        var agent = window.navigator.userAgent;\n        if (agent.match(/MSIE|Trident/) && !agent.match(/IEMobile/)) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    var ch_unit_bug = false;\n    $(function() {\n        function width(e) {\n            return e[0].getBoundingClientRect().width;\n        }\n        var base = '<span style=\"font-family: monospace;visibility:hidden;';\n        var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>').appendTo('body');\n        var space = $(base + '\">&nbsp;</span>').appendTo('body');\n        ch_unit_bug = width(ch) !== width(space);\n        ch.remove();\n        space.remove();\n    });\n\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    function char_len(chr) {\n        return entity_re.test(chr) ? 1 : chr.length;\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_entity = string.match(entity_re);\n        if (match_entity) {\n            return match_entity[1];\n        }\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.slice(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.slice(1).match(combine_chr_re)) {\n                return string.slice(0, 3);\n            }\n            return string.slice(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + char_len(chr);\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {len: strlen(chr), chr: chr};\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            str: spec.chr\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            str: last.str + spec.chr\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    str: spec.chr,\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.str;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + spec.str + '</span>';\n                } else {\n                    return '<span style=\"' + style + '\">' + spec.str + '</span>';\n                }\n            }).join('');\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var cmp = compare_fn(search_pos, mid);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn\n            );\n        } else {\n            return -1;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :: Cross-Browser selection utils\n    // ---------------------------------------------------------------------\n    var get_selected_text = (function() {\n        if (window.getSelection || document.getSelection) {\n            return function() {\n                var selection = (window.getSelection || document.getSelection)();\n                if (selection.text) {\n                    return selection.text;\n                } else {\n                    return selection.toString();\n                }\n            };\n        } else if (document.selection && document.selection.type !== \"Control\") {\n            return function() {\n                return document.selection.createRange().text;\n            };\n        }\n        return function() {\n            return '';\n        };\n    })();\n    // ---------------------------------------------------------------------\n    // :: try to copy given DOM element text to clipboard\n    // -----------------------------------------------------------------------\n    function text_to_clipboard(container, text) {\n        var $div = $('<div>' + text.replace(/\\n/, '<br/>') + '<div>');\n        $div.appendTo('body');\n        select_all($div[0]);\n        try {\n            document.execCommand('copy');\n        } catch (e) {}\n        $div.remove();\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function select_all(element) {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                selection.setBaseAndExtent(element, 0, element, 1);\n            } else if (document.createRange) {\n                var range = document.createRange();\n                range.selectNodeContents(element);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: 'DEV',\n        date: 'Sat, 06 Apr 2019 19:04:24 +0000',\n        // colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen', 'rebeccapurple'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            length(rep_string) -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += length(rep_string) - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_space(i) && (not_formatting || opening)) {\n                    if (space === -1 && prev_space !== i || space !== -1) {\n                        space = i;\n                        space_count = count;\n                    }\n                }\n                var braket = string[i].match(/[[\\]]/);\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var data = {\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: offset + 1,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1) {\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                var char = get_next_character(substring);\n                if (char.length > 1) {\n                    i += char.length - 1;\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(string);\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return chars.slice(start_index, end_index).join('');\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var re = /(&[^;]+);$/;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                var m;\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    // correct index for html entity\n                    m = string.slice(0, start + 1).match(re);\n                    if (m) {\n                        start -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    m = string.slice(0, end + 1).match(re);\n                    if (m) {\n                        end -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function - and fix unclosed &\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            string = string.replace(format_re, function(_, format, text) {\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                } else {\n                    semicolons = '';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                return '[[' + format + semicolons + safe(text) + ']' + text + ']';\n            });\n            return $.terminal.amp(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var chars = $.terminal.split_characters(text(line));\n                var last_char = chars[chars.length - 1];\n                var end_index = line_length - (last_char ? last_char.length : 1);\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                if (last_bracket) {\n                    end_index -= 1;\n                }\n                $.terminal.iterate_formatting(line, function(data) {\n                    var last_iteraction = data.index === end_index;\n                    var chr, substring;\n                    if (data.length >= length || last_iteraction ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).slice(data.space_count);\n                            // real length, not counting formatting\n                            var text_len = stripped.length;\n                            var limit = data.count + length + 1;\n                            stripped = stripped.slice(0, limit).trim();\n                            if (stripped.match(/\\s/) || limit < text_len) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (last_iteraction && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\])[\\s\\S]*/;\n            return string.split(re).filter(Boolean).map(function(string) {\n                if (string.match(/^\\[\\[/)) {\n                    if (!$.terminal.is_formatting(string)) {\n                        string += ']';\n                        stack.push(string.replace(format_re, '$1'));\n                    }\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        string = stack[stack.length - 1] + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (ret instanceof Array && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (formatter instanceof Array) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                allowedAttributes: [],\n                anyLinks: false\n            }, options || {});\n            function format(s, style, color, background, _class, data_text, text) {\n                var attrs;\n                if (data_text.match(/;/)) {\n                    try {\n                        var splitted = data_text.split(';');\n                        attrs = JSON.parse(splitted.slice(1).join(';'));\n                        data_text = splitted[0];\n                    } catch (e) {\n                    }\n                }\n                if (text === '') {\n                    return ''; //'<span>&nbsp;</span>';\n                }\n                // inside formatting we need to unescape escaped slashes\n                text = safe(text).replace(/\\\\\\\\/g, '\\\\');\n                var style_str = '';\n                if (style.indexOf('b') !== -1) {\n                    style_str += 'font-weight:bold;';\n                }\n                var text_decoration = [];\n                if (style.indexOf('u') !== -1) {\n                    text_decoration.push('underline');\n                }\n                if (style.indexOf('s') !== -1) {\n                    text_decoration.push('line-through');\n                }\n                if (style.indexOf('o') !== -1) {\n                    text_decoration.push('overline');\n                }\n                if (text_decoration.length) {\n                    style_str += 'text-decoration:' +\n                        text_decoration.join(' ') + ';';\n                }\n                if (style.indexOf('i') !== -1) {\n                    style_str += 'font-style:italic;';\n                }\n                if ($.terminal.valid_color(color)) {\n                    style_str += 'color:' + color + ';' +\n                        '--color:' + color + ';';\n                    if (style.indexOf('!') !== -1) {\n                        style_str += '--link-color:' + color + ';';\n                    }\n                    if (style.indexOf('g') !== -1) {\n                        style_str += 'text-shadow:0 0 5px ' + color + ';';\n                    }\n                }\n                if ($.terminal.valid_color(background)) {\n                    style_str += 'background-color:' + background + ';';\n                }\n                var data;\n                if (data_text === '') {\n                    data = text;\n                } else {\n                    data = data_text.replace(/&#93;/g, ']')\n                        .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                }\n                var extra = extra_css(text, options);\n                if (extra) {\n                    text = wide_characters(text, options);\n                    style_str += extra;\n                }\n                var result;\n                if (style.indexOf('!') !== -1) {\n                    if (data.match(email_re)) {\n                        result = '<a href=\"mailto:' + data + '\"';\n                    } else {\n                        // only http and ftp links (prevent javascript)\n                        // unless user force it with anyLinks option\n                        if (!settings.anyLinks &&\n                            !data.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/)) {\n                            data = '';\n                        }\n                        result = '<a target=\"_blank\"';\n                        if (data) {\n                            result += ' href=\"' + data + '\"';\n                        }\n                        var rel = [\"noopener\"];\n                        if (settings.linksNoReferrer) {\n                            rel.unshift(\"noreferrer\");\n                        }\n                        if (settings.linksNoFollow) {\n                            rel.unshift(\"nofollow\");\n                        }\n                        result += ' rel=\"' + rel.join(' ') + '\"';\n                    }\n                    // make focus to terminal textarea that will enable\n                    // terminal when pressing tab and terminal is disabled\n                    result += ' tabindex=\"1000\"';\n                } else {\n                    result = '<span';\n                }\n                if (style_str !== '') {\n                    result += ' style=\"' + style_str + '\"';\n                }\n                if (attrs) {\n                    var keys = Object.keys(attrs);\n                    if (keys.length && settings.allowedAttributes.length) {\n                        // filter JSON attributes by regex or string\n                        // in allowedAttributes options\n                        keys = keys.filter(function(name) {\n                            if (name === 'data-text') {\n                                return false;\n                            }\n                            var allowed = false;\n                            var filters = settings.allowedAttributes;\n                            for (var i = 0; i < filters.length; ++i) {\n                                if (filters[i] instanceof RegExp) {\n                                    if (filters[i].test(name)) {\n                                        allowed = true;\n                                        break;\n                                    }\n                                } else if (filters[i] === name) {\n                                    allowed = true;\n                                    break;\n                                }\n                            }\n                            return allowed;\n                        });\n                        if (keys.length) {\n                            result += ' ' + keys.map(function(name) {\n                                var value = attrs[name].replace(/\"/g, '&quot;');\n                                return name + '=\"' + value + '\"';\n                            }).join(' ');\n                        }\n                    }\n                }\n                if (_class !== '') {\n                    result += ' class=\"' + _class + '\"';\n                }\n                if (style.indexOf('!') !== -1) {\n                    result += '>' + text + '</a>';\n                } else {\n                    result += ' data-text=\"' + data.replace(/\"/g, '&quot;') + '\">' +\n                        text + '</span>';\n                }\n                return result;\n            }\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, format);\n                    } else {\n                        text = safe(text);\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string) {\n            return $.terminal.split_characters(text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                if (typeof arg !== 'string') {\n                    arg = String(arg);\n                }\n                if (arg.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (arg.match(/^--/)) {\n                    var name = arg.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (arg.match(/^-/)) {\n                    var single = arg.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [[ .... ]] in echo\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: object that can be used in string methods intead of regex\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var rect;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd')).html('&nbsp;');\n            rect = $prompt[0].getBoundingClientRect();\n            $prompt.remove();\n        } else {\n            var temp = $('<div class=\"terminal temp\"><div class=\"terminal-wrapper\">' +\n                         '<div class=\"terminal-output\"><div><div class=\"line\" style' +\n                         '=\"float: left\"><span>&nbsp;</span></div></div></div></div>')\n                .appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            rect = temp.find('.line')[0].getBoundingClientRect();\n        }\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        if (temp) {\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2019 Jakub T. Jankiewicz ' +\n        '<https://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2019 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        allowedAttributes: ['title', /^aria-/, 'id', /^data-/],\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (object instanceof Array) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // Display line code in the file if line numbers are present\n        function print_line(url_spec) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    self.echo('[[b;white;]' + file + ']');\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    self.echo(code.slice(n - 2, n + 3).map(function(line, i) {\n                        if (i === 2) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return '[' + (n + i - 1) + ']: ' + line;\n                    }).join('\\n')).resume();\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                /*\n                if (login) {\n                    var token = self.token(true);\n                    if (token) {\n                        command.args = [token].concat(command.args);\n                    } else {\n                        terminal.error('&#91;AUTH&#93; ' + strings.noTokenError);\n                        return;\n                    }\n                }*/\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== false && settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = response.procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.describe === false) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width,\n                    allowedAttributes: options.allowedAttributes || []\n                };\n                string = $.terminal.normalize(string);\n                var cols = self.cols();\n                if ((strlen(text(string)) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push('<span></span>');\n                        } else {\n                            output_buffer.push($.terminal.format(\n                                array[i],\n                                format_options\n                            ));\n                        }\n                    }\n                } else {\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(function(string) {\n                        output_buffer.push(string);\n                    });\n                }\n            } else {\n                output_buffer.push(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function links(string) {\n            function format(_, style, color, background, _class, data, text) {\n                function formatting(s, text) {\n                    return '[[' + [\n                        style + (s || ''),\n                        color,\n                        background,\n                        _class,\n                        data || text\n                    ].join(';') + ']';\n                }\n                function escaped(_) {\n                    return ']' + formatting('!', _) + _ + ']' + formatting();\n                }\n                if (!style.match(/!/)) {\n                    if (text.match(email_full_re) || text.match(url_full_re)) {\n                        return formatting('!', text) + text + ']';\n                    } else if (text.match(email_re) || text.match(url_nf_re)) {\n                        var output = text.replace(email_re, escaped)\n                            .replace(url_nf_re, escaped);\n                        return formatting('', data) + output + ']';\n                    }\n                }\n                return _;\n            }\n            if (!(string.match(email_re) || string.match(url_nf_re))) {\n                return string;\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return string.replace(email_re, '[[!;;]$1]').\n                    replace(url_nf_re, '[[!;;]$1]');\n            }\n            return $.terminal.format_split(string).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    return str.replace(format_parts_re, format);\n                } else {\n                    return str.replace(email_re, '[[!;;]$1]').\n                        replace(url_nf_re, '[[!;;]$1]');\n                }\n            }).join('');\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop,\n                    convertLinks: settings.convertLinks\n                }, line.options || {});\n                var string;\n                var arg = line.string;\n                var is_fn = is_function(arg);\n                if (is_fn) {\n                    arg = arg();\n                }\n                if (get_type(arg) !== 'string') {\n                    if (is_function(settings.parseObject)) {\n                        var ret = settings.parseObject(arg);\n                        if (get_type(ret) === 'string') {\n                            string = ret;\n                        }\n                    } else if (arg instanceof Array) {\n                        string = $.terminal.columns(arg, self.cols(), settings.tabs);\n                    } else {\n                        string = String(arg);\n                    }\n                } else {\n                    string = arg;\n                }\n                if (string !== '') {\n                    if (!line_settings.raw) {\n                        if (line_settings.formatters) {\n                            try {\n                                string = $.terminal.apply_formatters(\n                                    string,\n                                    settings\n                                );\n                            } catch (e) {\n                                display_exception(e, 'FORMATTING');\n                            }\n                        }\n                        var parts = string.split(format_exec_re);\n                        string = $.map(parts, function(string) {\n                            if (string && string.match(format_exec_re) &&\n                                !$.terminal.is_formatting(string)) {\n                                // redraw should not execute commands and it have\n                                // and lines variable have all extended commands\n                                string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                if (line_settings.exec) {\n                                    var prev_cmd;\n                                    if (prev_command) {\n                                        prev_command = prev_command.command.trim();\n                                    }\n                                    if (prev_cmd === string.trim()) {\n                                        self.error(strings().recursiveCall);\n                                    } else {\n                                        $.terminal.extended_command(self, string, {\n                                            invokeMethods: settings.invokeMethods\n                                        });\n                                    }\n                                }\n                                return '';\n                            } else {\n                                return string;\n                            }\n                        }).join('');\n                        if (string === '') {\n                            return;\n                        }\n                        if (line_settings.convertLinks) {\n                            string = links(string);\n                        }\n                        string = crlf($.terminal.normalize(string));\n                        string = $.terminal.encode(string, {\n                            tabs: settings.tabs\n                        });\n                    }\n                }\n                buffer_line(string, line.index, line_settings);\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var string = line[0];\n                    var options = line[1];\n                    if (get_type(string) === 'function') {\n                        string = string();\n                    }\n                    if (get_type(string) !== 'string') {\n                        string = String(string);\n                    }\n                    lines_to_show.push({\n                        string: string,\n                        index: index,\n                        options: options\n                    });\n                });\n                lines_to_show = lines_to_show.slice(lines_to_show.length - limit - 1);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        string: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                fire_event('onAfterRedraw');\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        settings.greetings.call(self, self.echo);\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            // true will return last rendered string\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                convertLinks: false,\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            self.echo(prompt + command, options);\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    // it should not pause when user return promise from read()\n                    if (!force_awake) {\n                        self.pause(settings.softPause);\n                    }\n                    force_awake = false;\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        (result.done || result.then).call(result, show);\n                    } else {\n                        return $.when(result).done(show);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (!exec) {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (is_function(settings.onBeforeLogout)) {\n                try {\n                    if (settings.onBeforeLogout.call(self, self) === false) {\n                        return;\n                    }\n                } catch (e) {\n                    settings.onBeforeLogout = $.noop;\n                    display_exception(e, 'onBeforeLogout');\n                }\n            }\n            clear_loging_storage();\n            if (is_function(settings.onAfterLogout)) {\n                try {\n                    settings.onAfterLogout.call(self, self);\n                } catch (e) {\n                    settings.onAfterLogout = $.noop;\n                    display_exception(e, 'onAfterlogout');\n                }\n            }\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            if (interpreter.prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    command_line.prompt(function(callback) {\n                        var ret = interpreter.prompt.call(self, callback, self);\n                        if (ret && is_function(ret.then)) {\n                            ret.then(function(string) {\n                                if (typeof string === 'string') {\n                                    callback(string);\n                                }\n                            });\n                        }\n                    });\n                } else {\n                    command_line.prompt(interpreter.prompt);\n                }\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name])) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function move_cursor_visible() {\n            var cursor = self.find('.cursor');\n            return cursor.is_fully_in_viewport(self).then(function(visible) {\n                if (!visible) {\n                    var offset = cursor.offset();\n                    var term_offset = self.offset();\n                    self.scrollTop(offset.top - term_offset.top - 5);\n                    return true;\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume();\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                if (get_selected_text() === '') {\n                    var command = self.get_command();\n                    var position = self.get_position();\n                    command = command.slice(0, position) + '^C' +\n                        command.slice(position + 2);\n                    echo_command(command);\n                    self.set_command('');\n                }\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            if (result && is_function(result.then)) {\n                                result.then(resolve);\n                            }\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        // ---------------------------------------------------------------------\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (self.is('body,html')) {\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        }\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                lines = [];\n                output.html('');\n                fire_event('onClear');\n                self.attr({scrollTop: 0});\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        if (ret && (ret.done || ret.then)) {\n                            (ret.done || ret.then).call(ret, function() {\n                                d.resolve(self);\n                            });\n                        }\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        while (self.level() > level) {\n                            self.pop(undefined, true);\n                        }\n                        if (settings.history) {\n                            command_line.history().enable();\n                        }\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then)) {\n                                self.pause();\n                                ret.then(function(token) {\n                                    login_callback(user, token);\n                                    self.resume();\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                // local copy\n                commands = commands.slice();\n                // default commands should not match for arguments\n                if (!self.before_cursor(false).match(/\\s/)) {\n                    if (settings.clear && $.inArray('clear', commands) === -1) {\n                        commands.push('clear');\n                    }\n                    if (settings.exit && $.inArray('exit', commands) === -1) {\n                        commands.push('exit');\n                    }\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (regex.test(commands[i])) {\n                            var match = commands[i];\n                            if (quote === '\"') {\n                                match = match.replace(/\"/g, '\\\\\"');\n                            }\n                            if (!quote && options.escape) {\n                                match = match.replace(/([\"'() ])/g, '\\\\$1');\n                            }\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(string, matched, sensitive);\n                        if (common) {\n                            replace(string, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function() {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable();\n                    }\n                    command_line.find('.prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable();\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lenghts = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lenghts) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    $.each(output_buffer, function(i, line) {\n                        if (line === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(line) && is_function(line.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + line.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            line.finalize(wrapper.attr('data-index', line.index));\n                        } else {\n                            $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                        }\n                    });\n                    limit_lines();\n                    fire_event('onFlush');\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                } catch (e1) {\n                    if (is_function(settings.exceptionHandler)) {\n                        try {\n                            settings.exceptionHandler.call(self, e1, 'TERMINAL (Flush)');\n                        } catch (e2) {\n                            settings.exceptionHandler = $.noop;\n                            alert_exception('[exceptionHandler]', e2);\n                        }\n                    } else {\n                        alert_exception('[Flush]', e1);\n                    }\n                } finally {\n                    output_buffer = [];\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, string, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (string === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        lines[line][0] = string;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            string: string,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have options\n            // :: * flush - indicate that arg should be send to DOM\n            // :: * raw - indicate if it should handle input as html\n            // :: * finalize - function call with container div\n            // :: * keepWords - inform how to wrap text\n            // :: * formatters - inform function if it should use formatters\n            // ::   on input string - good to prevent XSS when you want\n            // ::   advanced server side controling of terminal\n            // :: you can echo: promise, function, strings array or string\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                var arg_defined = arguments.length > 0;\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            keepWords: false,\n                            formatters: true,\n                            allowedAttributes: settings.allowedAttributes\n                        }, options || {});\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize(div);\n                                    }\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                        }\n                        if (typeof arg === 'function') {\n                            arg = arg.bind(self);\n                        } else if (typeof arg === 'undefined') {\n                            if (arg_defined) {\n                                arg = String(arg);\n                            } else {\n                                arg = '';\n                            }\n                        }\n                        process_line({\n                            string: arg,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        lines.push([arg, $.extend(locals, {\n                            exec: false\n                        })]);\n                        if (locals.flush) {\n                            self.flush();\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo);\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;error]');\n                    return '[[;;;error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    });\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('exception message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        return '[[;;;error]' + trace.replace(url_re, function(url) {\n                            return ']' + url + '[[;;;error]';\n                        }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('exception stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.attr('scrollTop') && amount > 0) {\n                        self.attr('scrollTop', 0);\n                    }\n                    pos = self.attr('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                // return from read() should not pause terminal\n                force_awake = true;\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    // restore mask\n                    self.set_mask(top.mask);\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self.scrollTop();\n                    height = self.outerHeight();\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var force_awake = false; // flag used to don't pause when user return read() call\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        if (typeof settings.width === 'number') {\n            self.width(settings.width);\n        }\n        if (typeof settings.height === 'number') {\n            self.height(settings.height);\n        }\n        var char_size = get_char_size(self);\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        var font_resizer = $('<div class=\"font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (init_interpreter instanceof Array) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents && is_function(settings.onPaste)) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event['text'] = object;\n                    } else if (object instanceof Blob) {\n                        event['image'] = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret) {\n                        if (is_function(ret.then)) {\n                            return ret.then(function(ret) {\n                                echo(ret, true);\n                            });\n                        } else {\n                            echo(ret, true);\n                        }\n                    } else {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^data:/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(echo);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(itrp) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                itrp.completion = 'settings';\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: settings.prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, itrp));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                prompt: settings.prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    move_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    var visible = move_cursor_visible();\n                    visible.then(function(visible) {\n                        if (!visible) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_text() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    self.on('contextmenu.terminal', function(e) {\n                        if (get_selected_text() === '') {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                wrapper.css('overflow', 'hidden');\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    var props = {\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    };\n                                    if (!is_css_variables_supported) {\n                                        var in_line = self.find('.cmd .cursor-line')\n                                            .prevUntil('.prompt').length;\n                                        props.top = in_line * 14 + 'px';\n                                    }\n                                    clip.css(props);\n                                    wrapper.css('overflow', '');\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href);\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                self.resizer('unbind').resizer(resize);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                });\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (was_enabled && !visible) {\n                    self.disable();\n                }\n                if (visible) {\n                    create_resizers();\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                    }\n                }\n                if (window.IntersectionObserver && self.css('position') !== 'fixed') {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: document.body\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 100);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if (have_scrollbar() || ret === false || !event.ctrlKey) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        self.data('terminal', self);\n        return self;\n    }; // terminal plugin\n});\n"]}